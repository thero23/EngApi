[{"D:\\Projects\\Diplom\\english-react\\src\\index.js":"1","D:\\Projects\\Diplom\\english-react\\src\\reportWebVitals.js":"2","D:\\Projects\\Diplom\\english-react\\src\\App.js":"3","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Navigation.js":"4","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Help\\Help.js":"5","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionaries.js":"6","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Tasks\\Tasks.js":"7","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionary\\Dictionary.js":"8","D:\\Projects\\Diplom\\english-react\\src\\axios.js":"9","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Words\\Words.js":"10","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\AuthButton\\AuthButton.js":"11","D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\AuthForm\\AuthForm.js":"12","D:\\Projects\\Diplom\\english-react\\src\\Components\\Layout\\Layout.js":"13","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isAuthState.js":"14","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Sections.js":"15","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Section\\Section.js":"16","D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\RegistrationForm\\RegForm.js":"17","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Subsection.js":"18","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\subsectionState.js":"19","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isTeacherState.js":"20","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\AdminPanel.jsx":"21","D:\\Projects\\Diplom\\english-react\\src\\Components\\ErrorPages\\Access\\NoAccess.jsx":"22","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\Words.jsx":"23","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\AddWord.jsx":"24","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\DeleteWord.jsx":"25","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\EditWord.jsx":"26","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\Dictionaries.jsx":"27","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\EditDictionary.jsx":"28","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\DeleteDictionary.jsx":"29","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\AddDictionary.jsx":"30","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\EditWord.jsx":"31","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\AddWord.jsx":"32","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\DeleteWord.jsx":"33","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\Rows.jsx":"34"},{"size":501,"mtime":1614092187479,"results":"35","hashOfConfig":"36"},{"size":375,"mtime":1614092024156,"results":"37","hashOfConfig":"36"},{"size":610,"mtime":1610718963397,"results":"38","hashOfConfig":"36"},{"size":1616,"mtime":1613572156465,"results":"39","hashOfConfig":"36"},{"size":122,"mtime":1610527124801,"results":"40","hashOfConfig":"36"},{"size":1686,"mtime":1611611134367,"results":"41","hashOfConfig":"36"},{"size":125,"mtime":1610527338267,"results":"42","hashOfConfig":"36"},{"size":350,"mtime":1610548136145,"results":"43","hashOfConfig":"36"},{"size":144,"mtime":1611594906881,"results":"44","hashOfConfig":"36"},{"size":1086,"mtime":1613577410261,"results":"45","hashOfConfig":"36"},{"size":1251,"mtime":1610719317702,"results":"46","hashOfConfig":"36"},{"size":6430,"mtime":1611605541365,"results":"47","hashOfConfig":"36"},{"size":1701,"mtime":1612709504276,"results":"48","hashOfConfig":"36"},{"size":144,"mtime":1614092161743,"results":"49","hashOfConfig":"36"},{"size":5227,"mtime":1612853055426,"results":"50","hashOfConfig":"36"},{"size":770,"mtime":1612702683725,"results":"51","hashOfConfig":"36"},{"size":4103,"mtime":1611596585563,"results":"52","hashOfConfig":"36"},{"size":244,"mtime":1611613900076,"results":"53","hashOfConfig":"36"},{"size":153,"mtime":1614092104880,"results":"54","hashOfConfig":"36"},{"size":154,"mtime":1614092127843,"results":"55","hashOfConfig":"36"},{"size":2970,"mtime":1613573244310,"results":"56","hashOfConfig":"36"},{"size":163,"mtime":1612709529476,"results":"57","hashOfConfig":"36"},{"size":3540,"mtime":1614088192196,"results":"58","hashOfConfig":"36"},{"size":1918,"mtime":1613661000043,"results":"59","hashOfConfig":"36"},{"size":1229,"mtime":1613660618617,"results":"60","hashOfConfig":"36"},{"size":2346,"mtime":1614086802935,"results":"61","hashOfConfig":"36"},{"size":2872,"mtime":1614089526918,"results":"62","hashOfConfig":"36"},{"size":2317,"mtime":1613716559977,"results":"63","hashOfConfig":"36"},{"size":1263,"mtime":1613662731404,"results":"64","hashOfConfig":"36"},{"size":2707,"mtime":1614092311171,"results":"65","hashOfConfig":"36"},{"size":2383,"mtime":1613717604864,"results":"66","hashOfConfig":"36"},{"size":1921,"mtime":1613717659145,"results":"67","hashOfConfig":"36"},{"size":1232,"mtime":1613717611400,"results":"68","hashOfConfig":"36"},{"size":5030,"mtime":1614089968790,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"evuqbs",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},"D:\\Projects\\Diplom\\english-react\\src\\index.js",[],["147","148"],"D:\\Projects\\Diplom\\english-react\\src\\reportWebVitals.js",[],"D:\\Projects\\Diplom\\english-react\\src\\App.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Navigation.js",["149"],"import React,{ useEffect} from 'react';\r\nimport './Navigation.css';\r\nimport {NavLink} from 'react-router-dom'; \r\n\r\nimport AuthButton from './AuthButton/AuthButton';\r\nimport {useRecoilState} from 'recoil';\r\nimport isAuthState from '../../recoilStates/isAuthState';\r\nimport isTeacherState from '../../recoilStates/isTeacherState';\r\nimport axios from '../../axios';\r\n\r\nconst Navigation =(props)=>{\r\n \r\n    const [isAuth,changeAuth]=useRecoilState(isAuthState);\r\n    const [isTeacher,changeTeacher]=useRecoilState(isTeacherState);\r\n\r\n    useEffect(()=>{\r\n        axios.get('authentication/check')\r\n        .then(response=>{\r\n            changeAuth(true);\r\n            console.log('isTeacher: ',response.data.teacher);\r\n            changeTeacher(response.data.teacher);\r\n        })\r\n        .catch(error=>{\r\n            changeAuth(false);\r\n            changeTeacher(false);\r\n        });\r\n\r\n    },[isAuth]);\r\n\r\n    return(\r\n\r\n        <div className=\"Navigation\">\r\n           <header>\r\n               <nav>\r\n                   <ul>\r\n                       <li><NavLink to=\"/sections\">Главная</NavLink></li>\r\n                       <li><NavLink to=\"/dictionaries\">Словари</NavLink></li>\r\n                       {/* <li><NavLink to=\"/tasks\">Задания</NavLink></li> */}\r\n                       <li><NavLink to=\"/help\">Справка</NavLink></li>\r\n                       {isTeacher ?  <li><NavLink to=\"/admin\">Админка</NavLink></li> : null}\r\n                   </ul>\r\n               </nav>\r\n               <AuthButton/>\r\n           </header>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navigation;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Help\\Help.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionaries.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Tasks\\Tasks.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionary\\Dictionary.js",[],"D:\\Projects\\Diplom\\english-react\\src\\axios.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Words\\Words.js",["150"],"import React, { useState, useEffect } from 'react';\r\nimport './Words.css';\r\nimport axios from '../../../axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'original', headerName: 'Original', width: 130 },\r\n  { field: 'translate', headerName: 'Translate', width: 130 },\r\n];\r\nconst Words = (props) => {\r\n  const [words, changeWords] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let toUrl = 'words';\r\n    props.match.params.dictId ? toUrl = props.match.params.dictId + \"/words\" : toUrl = \"words\";\r\n    axios.get(\"/dictionaries/\" + toUrl)\r\n      .then(response => {\r\n        const words = response.data;\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        history.push(\"/authentication\");\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={words} columns={columns} pageSize={5} checkboxSelection />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Words;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\AuthButton\\AuthButton.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\AuthForm\\AuthForm.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Layout\\Layout.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isAuthState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Sections.js",["151","152","153"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\nimport Section from './Section/Section';\r\nimport './Sections.css';\r\nimport subsectionState from '../../../recoilStates/subsectionState';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`wrapped-tabpanel-${index}`}\r\n            aria-labelledby={`wrapped-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `wrapped-tab-${index}`,\r\n        'aria-controls': `wrapped-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\n\r\nconst Sections = (props) => {\r\n\r\n    const [sections, changeSections] = useState([]);\r\n    const [subsections, changeSubsections] = useState([]);\r\n    const [selectedSectionId, changeSelectedSection] = useState(null);\r\n    const [selectedSubsection, setSelectedSubsection] = useRecoilState(subsectionState);\r\n    const [content, changeContent] = useState('');\r\n\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('one');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setSelectedSubsection({});\r\n        axios.get(\"/sections\")\r\n            .then(response => {\r\n                const sect = response.data;\r\n                changeSections(sect);\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (selectedSubsection !== {}) {\r\n            axios.get(`/subsections/${selectedSubsection.id}`)\r\n                .then(response => {\r\n                    const lecture = response.data[0].lecture;\r\n                    changeContent(lecture);\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n        }\r\n    }, [selectedSubsection]);\r\n\r\n    const sectionToggleHandler = (id) => {\r\n        selectedSectionId === id ? changeSelectedSection(null) : changeSelectedSection(id);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (selectedSectionId && selectedSubsection !=={}) {\r\n            axios.get(`/sections/${selectedSectionId}/subsections`)\r\n                .then(response => {\r\n                    const subsection = response.data;\r\n                    changeSubsections(subsection);\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log(error)\r\n                });\r\n        }\r\n    }, [selectedSectionId]);\r\n\r\n    let sect = sections.map(sec => {\r\n        return (\r\n            <Section key={sec.id} id={sec.id} clicked={() => sectionToggleHandler(sec.id)} showId={selectedSectionId} subsections={subsections} name={sec.name} />\r\n        )\r\n    });\r\n    return (\r\n      <div className=\"Sections\">\r\n          <div className=\"Tree\">\r\n            {sect}\r\n          </div>\r\n            <div className=\"Content\">\r\n                {selectedSectionId && selectedSubsection &&(<div className={classes.root}>\r\n                    <AppBar position=\"static\">\r\n                        <Tabs value={value} onChange={handleChange} aria-label=\"wrapped label tabs example\">\r\n                            <Tab\r\n                                value=\"one\"\r\n                                label=\"Lecture\"\r\n                                wrapped\r\n                                {...a11yProps('one')}\r\n                            />\r\n                            <Tab value=\"two\" label=\"Tasks\" {...a11yProps('two')} />\r\n                            <Tab value=\"three\" label=\"Test\" {...a11yProps('three')} />\r\n                            <Tab value=\"four\" label=\"Multimedia\" {...a11yProps('four')} />\r\n                            <Tab value=\"five\" label=\"Dictionaries\" {...a11yProps('five')} />\r\n                            \r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index=\"one\">\r\n                        <h1>{selectedSubsection.name}</h1>\r\n                        {content}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index=\"two\">\r\n                        Item Two\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index=\"three\">\r\n                        Item Three\r\n                    </TabPanel>\r\n                    \r\n                </div>)}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Sections;\r\n\r\n\r\n\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Section\\Section.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\RegistrationForm\\RegForm.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Subsection.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\subsectionState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isTeacherState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\AdminPanel.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\ErrorPages\\Access\\NoAccess.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\Words.jsx",["154"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\nimport { useHistory } from 'react-router';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AddCircleTwoTone, DeleteTwoTone, EditTwoTone } from '@material-ui/icons';\r\nimport { red, yellow, blue } from '@material-ui/core/colors';\r\nimport DeleteWord from './DeleteWord';\r\nimport EditWord from './EditWord';\r\nimport AddWord from './AddWord';\r\nimport { Dialog, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst Words = (props) => {\r\n  const [words, changeWords] = useState([]);\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [modal, setModal] = useState({});\r\n  const handleClickOpen = (name, id) => {\r\n    switch (name) {\r\n      case 'add': setModal(<AddWord handleClose={handleClose} getItems={getItems} />)\r\n        break;\r\n      case 'edit': setModal(<EditWord handleClose={handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      case 'delete': setModal(<DeleteWord handleClose={handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getItems = () => {\r\n    axios.get('/dictionaries/words')\r\n      .then(response => {\r\n        const words = response.data;\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        history.push(\"/authentication\");\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div style={{ height: 400, width: '80%' }}>\r\n        <>\r\n          <IconButton aria-label=\"add\" onClick={() => handleClickOpen('add')} >\r\n            <AddCircleTwoTone fontSize=\"large\" style={{ color: blue[500] }} />\r\n          </IconButton>\r\n          <TableContainer component={Paper}>\r\n            <Table aria-label=\"collapsible table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell />\r\n                  <TableCell>Original</TableCell>\r\n                  <TableCell>Translate</TableCell>\r\n                  <TableCell />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {words.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell />\r\n                    <TableCell>{row.original}</TableCell>\r\n                    <TableCell>{row.translate}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton aria-label=\"edit\" onClick={() => handleClickOpen('edit', row.id)}>\r\n                        <EditTwoTone fontSize=\"default\" style={{ color: yellow[500] }} />\r\n                      </IconButton>\r\n                      <IconButton aria-label=\"delete\" onClick={() => handleClickOpen('delete', row.id)}>\r\n                        <DeleteTwoTone fontSize=\"default\" style={{ color: red[500] }} />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      </div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {modal}\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Words;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\AddWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\DeleteWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\EditWord.jsx",["155"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../axios';\r\n\r\nexport default function AddWord({ handleClose, getItems, wordId }) {\r\n  const [translate, setTranslate] = useState('');\r\n  const [original, setOriginal] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/words/${wordId}`)\r\n      .then(response => {\r\n        setTranslate(response.data.translate);\r\n        setOriginal(response.data.original);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveWord = () => {\r\n    const word = {\r\n      id: wordId,\r\n      translate: translate,\r\n      original: original,\r\n    }\r\n    axios.put('dictionaries/words', word)\r\n      .then((response) => {\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!original.length || !translate.length);\r\n  }, [original, translate])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Original\"\r\n          value={original}\r\n          onChange={(e) => setOriginal(e.target.value)}\r\n          type=\"text\"\r\n          autoComplete={false}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Translate\"\r\n          value={translate}\r\n          onChange={(e) => setTranslate(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveWord();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n          </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\Dictionaries.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\EditDictionary.jsx",["156"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../axios';\r\n\r\nexport default function AddWord({ handleClose, getItems, dictionaryId }) {\r\n  const [name, setName] = useState('');\r\n  const [secretName, setSecretName] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/${dictionaryId}`)\r\n      .then(response => {\r\n        setName(response.data.name);\r\n        setSecretName(response.data.secretName);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveDictionary = () => {\r\n    const dictionary = {\r\n      id: dictionaryId,\r\n      name: name,\r\n      secretName: secretName,\r\n    }\r\n    axios.put('dictionaries/', dictionary)\r\n      .then((response) => {\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!name.length || !secretName.length);\r\n  }, [name, secretName])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Name for teachers\"\r\n          value={secretName}\r\n          onChange={(e) => setSecretName(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveDictionary();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\DeleteDictionary.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\AddDictionary.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\EditWord.jsx",["157"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../../axios';\r\n\r\n\r\nexport default function AddWord({ handleClose, getItems, wordId }) {\r\n  const [translate, setTranslate] = useState('');\r\n  const [original, setOriginal] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/words/${wordId}`)\r\n      .then(response => {\r\n        setTranslate(response.data.translate);\r\n        setOriginal(response.data.original);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveWord = () => {\r\n    const word = {\r\n      id: wordId,\r\n      translate: translate,\r\n      original: original,\r\n    }\r\n    axios.put('dictionaries/words', word)\r\n      .then((response) => {\r\n        console.log('blabla');\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!original.length || !translate.length);\r\n  }, [original, translate])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Original\"\r\n          value={original}\r\n          onChange={(e) => setOriginal(e.target.value)}\r\n          type=\"text\"\r\n          autoComplete={false}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Translate\"\r\n          value={translate}\r\n          onChange={(e) => setTranslate(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveWord();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n          </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\AddWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\DeleteWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\Rows.jsx",["158","159","160"],"import React, { useEffect, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport axios from '../../../../axios';\r\nimport { AddCircleTwoTone, DeleteTwoTone, EditTwoTone } from '@material-ui/icons';\r\nimport { red, yellow, blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteWord from './DeleteWord';\r\nimport EditWord from './EditWord';\r\nimport AddWord from './AddWord';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst Rows = (props) => {\r\n  const { row } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  const [words, changeWords] = useState([]);\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  const getItems = () => {\r\n    axios.get(`/dictionaries/${row.id}/words`)\r\n      .then(response => {\r\n        const words = response.data;\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = (name, id) => {\r\n    switch (name) {\r\n      case 'add': props.setModal(<AddWord handleClose={props.handleClose} getItems={getItems} />)\r\n        break;\r\n      case 'edit': props.setModal(<EditWord handleClose={props.handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      case 'delete': props.setModal(<DeleteWord handleClose={props.handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    props.setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>{row.name}</TableCell>\r\n        <TableCell>{row.secretName}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <IconButton aria-label=\"edit\" onClick={() => props.actions('edit', row.id)}>\r\n            <EditTwoTone fontSize=\"large\" style={{ color: yellow[500] }} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"delete\" onClick={() => props.actions('delete', row.id)}>\r\n            <DeleteTwoTone fontSize=\"large\" style={{ color: red[500] }} />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Words\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Original</TableCell>\r\n                    <TableCell>Translate</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <IconButton aria-label=\"add\" onClick={() => handleClickOpen('add')} >\r\n                    <AddCircleTwoTone fontSize=\"small\" style={{ color: blue[500] }} />\r\n                  </IconButton>\r\n                  {words.map((word) => (\r\n                    <TableRow key={word.id}>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>{word.original}</TableCell>\r\n                      <TableCell>{word.translate}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton aria-label=\"edit\" onClick={() => handleClickOpen('edit', word.id) }>\r\n                          <EditTwoTone fontSize=\"small\" style={{ color: yellow[500] }} />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" onClick={() => handleClickOpen('delete', word.id)}>\r\n                          <DeleteTwoTone fontSize=\"small\" style={{ color: red[500] }} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Rows;",{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":28,"column":7,"nodeType":"167","endLine":28,"endColumn":15,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":27,"column":6,"nodeType":"167","endLine":27,"endColumn":8,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":6,"column":26,"nodeType":"173","messageId":"174","endLine":6,"endColumn":40},{"ruleId":"165","severity":1,"message":"175","line":75,"column":8,"nodeType":"167","endLine":75,"endColumn":10,"suggestions":"176"},{"ruleId":"165","severity":1,"message":"177","line":106,"column":8,"nodeType":"167","endLine":106,"endColumn":27,"suggestions":"178"},{"ruleId":"165","severity":1,"message":"179","line":51,"column":6,"nodeType":"167","endLine":51,"endColumn":8,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":23,"column":6,"nodeType":"167","endLine":23,"endColumn":8,"suggestions":"182"},{"ruleId":"165","severity":1,"message":"181","line":23,"column":6,"nodeType":"167","endLine":23,"endColumn":8,"suggestions":"183"},{"ruleId":"165","severity":1,"message":"181","line":24,"column":6,"nodeType":"167","endLine":24,"endColumn":8,"suggestions":"184"},{"ruleId":"165","severity":1,"message":"179","line":37,"column":6,"nodeType":"167","endLine":37,"endColumn":8,"suggestions":"185"},{"ruleId":"171","severity":1,"message":"186","line":49,"column":9,"nodeType":"173","messageId":"174","endLine":49,"endColumn":20},{"ruleId":"165","severity":1,"message":"179","line":69,"column":6,"nodeType":"167","endLine":69,"endColumn":8,"suggestions":"187"},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeAuth' and 'changeTeacher'. Either include them or remove the dependency array.","ArrayExpression",["190"],"React Hook useEffect has missing dependencies: 'history' and 'props.match.params.dictId'. Either include them or remove the dependency array.",["191"],"no-unused-vars","'useRecoilValue' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'setSelectedSubsection'. Either include it or remove the dependency array.",["192"],"React Hook useEffect has a missing dependency: 'selectedSubsection'. Either include it or remove the dependency array.",["193"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["194"],"React Hook useEffect has a missing dependency: 'getWord'. Either include it or remove the dependency array.",["195"],["196"],["197"],["198"],"'handleClose' is assigned a value but never used.",["199"],"no-global-assign","no-unsafe-negation",{"desc":"200","fix":"201"},{"desc":"202","fix":"203"},{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"210","fix":"212"},{"desc":"210","fix":"213"},{"desc":"208","fix":"214"},{"desc":"208","fix":"215"},"Update the dependencies array to be: [changeAuth, changeTeacher, isAuth]",{"range":"216","text":"217"},"Update the dependencies array to be: [history, props.match.params.dictId]",{"range":"218","text":"219"},"Update the dependencies array to be: [setSelectedSubsection]",{"range":"220","text":"221"},"Update the dependencies array to be: [selectedSectionId, selectedSubsection]",{"range":"222","text":"223"},"Update the dependencies array to be: [getItems]",{"range":"224","text":"225"},"Update the dependencies array to be: [getWord]",{"range":"226","text":"227"},{"range":"228","text":"227"},{"range":"229","text":"227"},{"range":"230","text":"225"},{"range":"231","text":"225"},[891,899],"[changeAuth, changeTeacher, isAuth]",[889,891],"[history, props.match.params.dictId]",[2244,2246],"[setSelectedSubsection]",[3266,3285],"[selectedSectionId, selectedSubsection]",[1757,1759],"[getItems]",[889,891],"[getWord]",[883,885],[894,896],[1349,1351],[2216,2218]]