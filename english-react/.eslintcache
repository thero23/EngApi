[{"D:\\Projects\\Diplom\\english-react\\src\\index.js":"1","D:\\Projects\\Diplom\\english-react\\src\\reportWebVitals.js":"2","D:\\Projects\\Diplom\\english-react\\src\\App.js":"3","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Navigation.js":"4","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Help\\Help.js":"5","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionaries.js":"6","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionary\\Dictionary.js":"7","D:\\Projects\\Diplom\\english-react\\src\\axios.js":"8","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Words\\Words.js":"9","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\AuthButton\\AuthButton.js":"10","D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\AuthForm\\AuthForm.js":"11","D:\\Projects\\Diplom\\english-react\\src\\Components\\Layout\\Layout.js":"12","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isAuthState.js":"13","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Sections.js":"14","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Section\\Section.js":"15","D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\RegistrationForm\\RegForm.js":"16","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Subsection.js":"17","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\subsectionState.js":"18","D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isTeacherState.js":"19","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\AdminPanel.jsx":"20","D:\\Projects\\Diplom\\english-react\\src\\Components\\ErrorPages\\Access\\NoAccess.jsx":"21","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\Words.jsx":"22","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\AddWord.jsx":"23","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\DeleteWord.jsx":"24","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\EditWord.jsx":"25","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\Dictionaries.jsx":"26","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\EditDictionary.jsx":"27","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\DeleteDictionary.jsx":"28","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\AddDictionary.jsx":"29","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\EditWord.jsx":"30","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\AddWord.jsx":"31","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\DeleteWord.jsx":"32","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\Rows.jsx":"33","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\Exercises.jsx":"34","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\AddExercise.jsx":"35","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\DeleteExercise.jsx":"36","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\ExerciseDetails.jsx":"37","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\ExercisesList.jsx":"38","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\Answer.jsx":"39","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Sections.jsx":"40","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\SectionsList.jsx":"41","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\DeleteSection.jsx":"42","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\SectionDetails.jsx":"43","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteUser.jsx":"44","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\UserDetails.jsx":"45","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddUser.jsx":"46","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\UsersPanel.jsx":"47","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\SubsectionDetails.jsx":"48","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\DictionariesPanel.jsx":"49","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DictionaryDetails.jsx":"50","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddDictionary.jsx":"51","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteDictionary.jsx":"52","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Users\\Users.jsx":"53","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddExercises.jsx":"54","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteExercise.jsx":"55","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\ExerciseDetails.jsx":"56","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\AddSubsections.jsx":"57","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteSubsection.jsx":"58","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\AddSection.jsx":"59","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Exercises\\ExerciseStepper.jsx":"60","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Exercises\\Answer.jsx":"61","D:\\Projects\\Diplom\\english-react\\src\\Components\\Footer\\Footer.jsx":"62","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\SearchBar\\index.jsx":"63","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Profile\\Profile.jsx":"64"},{"size":501,"mtime":1614092187479,"results":"65","hashOfConfig":"66"},{"size":375,"mtime":1614092024156,"results":"67","hashOfConfig":"66"},{"size":642,"mtime":1616955476963,"results":"68","hashOfConfig":"66"},{"size":1495,"mtime":1617043947130,"results":"69","hashOfConfig":"66"},{"size":682,"mtime":1616970146757,"results":"70","hashOfConfig":"66"},{"size":1686,"mtime":1611611134367,"results":"71","hashOfConfig":"66"},{"size":350,"mtime":1610548136145,"results":"72","hashOfConfig":"66"},{"size":191,"mtime":1617059838110,"results":"73","hashOfConfig":"66"},{"size":1017,"mtime":1616342584202,"results":"74","hashOfConfig":"66"},{"size":1726,"mtime":1616967604105,"results":"75","hashOfConfig":"66"},{"size":5821,"mtime":1616965929314,"results":"76","hashOfConfig":"66"},{"size":1820,"mtime":1617059329472,"results":"77","hashOfConfig":"66"},{"size":144,"mtime":1614092161743,"results":"78","hashOfConfig":"66"},{"size":5643,"mtime":1616969200892,"results":"79","hashOfConfig":"66"},{"size":937,"mtime":1617058254287,"results":"80","hashOfConfig":"66"},{"size":4103,"mtime":1611596585563,"results":"81","hashOfConfig":"66"},{"size":294,"mtime":1617058356652,"results":"82","hashOfConfig":"66"},{"size":153,"mtime":1614092104880,"results":"83","hashOfConfig":"66"},{"size":154,"mtime":1614092127843,"results":"84","hashOfConfig":"66"},{"size":3159,"mtime":1616957434149,"results":"85","hashOfConfig":"66"},{"size":163,"mtime":1612709529476,"results":"86","hashOfConfig":"66"},{"size":4036,"mtime":1616958665096,"results":"87","hashOfConfig":"66"},{"size":1918,"mtime":1613661000043,"results":"88","hashOfConfig":"66"},{"size":1229,"mtime":1614433039418,"results":"89","hashOfConfig":"66"},{"size":2346,"mtime":1614086802935,"results":"90","hashOfConfig":"66"},{"size":3449,"mtime":1616958782526,"results":"91","hashOfConfig":"66"},{"size":2317,"mtime":1613716559977,"results":"92","hashOfConfig":"66"},{"size":1263,"mtime":1613662731404,"results":"93","hashOfConfig":"66"},{"size":2688,"mtime":1617049263586,"results":"94","hashOfConfig":"66"},{"size":2351,"mtime":1615214678282,"results":"95","hashOfConfig":"66"},{"size":2920,"mtime":1617055438790,"results":"96","hashOfConfig":"66"},{"size":1341,"mtime":1614435041907,"results":"97","hashOfConfig":"66"},{"size":5121,"mtime":1614434947003,"results":"98","hashOfConfig":"66"},{"size":1503,"mtime":1617048372150,"results":"99","hashOfConfig":"66"},{"size":3755,"mtime":1617057265115,"results":"100","hashOfConfig":"66"},{"size":1264,"mtime":1614874869043,"results":"101","hashOfConfig":"66"},{"size":1485,"mtime":1617056545610,"results":"102","hashOfConfig":"66"},{"size":2947,"mtime":1616958842374,"results":"103","hashOfConfig":"66"},{"size":875,"mtime":1615214689432,"results":"104","hashOfConfig":"66"},{"size":1546,"mtime":1616958388240,"results":"105","hashOfConfig":"66"},{"size":2854,"mtime":1616958691329,"results":"106","hashOfConfig":"66"},{"size":1255,"mtime":1615043323079,"results":"107","hashOfConfig":"66"},{"size":9028,"mtime":1617056293592,"results":"108","hashOfConfig":"66"},{"size":1261,"mtime":1615132224782,"results":"109","hashOfConfig":"66"},{"size":1152,"mtime":1615130816577,"results":"110","hashOfConfig":"66"},{"size":1747,"mtime":1615653574600,"results":"111","hashOfConfig":"66"},{"size":1761,"mtime":1617055808028,"results":"112","hashOfConfig":"66"},{"size":6579,"mtime":1617056117369,"results":"113","hashOfConfig":"66"},{"size":1874,"mtime":1617055835418,"results":"114","hashOfConfig":"66"},{"size":1223,"mtime":1615308187010,"results":"115","hashOfConfig":"66"},{"size":1854,"mtime":1615308878799,"results":"116","hashOfConfig":"66"},{"size":1294,"mtime":1615309382459,"results":"117","hashOfConfig":"66"},{"size":3844,"mtime":1615475967996,"results":"118","hashOfConfig":"66"},{"size":1799,"mtime":1617052594672,"results":"119","hashOfConfig":"66"},{"size":1297,"mtime":1615722924327,"results":"120","hashOfConfig":"66"},{"size":1263,"mtime":1616343347004,"results":"121","hashOfConfig":"66"},{"size":3728,"mtime":1616379293124,"results":"122","hashOfConfig":"66"},{"size":1273,"mtime":1615739683273,"results":"123","hashOfConfig":"66"},{"size":2767,"mtime":1615825445907,"results":"124","hashOfConfig":"66"},{"size":4700,"mtime":1616962492308,"results":"125","hashOfConfig":"66"},{"size":914,"mtime":1616376625920,"results":"126","hashOfConfig":"66"},{"size":583,"mtime":1616969832624,"results":"127","hashOfConfig":"66"},{"size":675,"mtime":1616956342651,"results":"128","hashOfConfig":"66"},{"size":3122,"mtime":1616970663303,"results":"129","hashOfConfig":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},"evuqbs",{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"132"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"132"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"132"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"132"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"132"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"132"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"132"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"132"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"132"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"132"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"132"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"132"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"132"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"132"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"132"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"132"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"132"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"132"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"132"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"132"},"D:\\Projects\\Diplom\\english-react\\src\\index.js",[],["279","280"],"D:\\Projects\\Diplom\\english-react\\src\\reportWebVitals.js",[],"D:\\Projects\\Diplom\\english-react\\src\\App.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Navigation.js",["281"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Help\\Help.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionaries.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Dictionaries\\Dictionary\\Dictionary.js",[],"D:\\Projects\\Diplom\\english-react\\src\\axios.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Words\\Words.js",["282"],"import React, { useState, useEffect } from 'react';\r\nimport './Words.css';\r\nimport axios from '../../../axios';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 70 },\r\n  { field: 'original', headerName: 'Original', width: 130 },\r\n  { field: 'translate', headerName: 'Translate', width: 130 },\r\n];\r\nconst Words = ({dictionaryId, setSelectedDict}) => {\r\n  const [words, changeWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`dictionaries/${dictionaryId}/words`)\r\n      .then(response => {\r\n        const words = response.data;\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div style={{ height: 400, width: '100%' }}>\r\n      <DataGrid rows={words} columns={columns} pageSize={5} checkboxSelection />\r\n      <Button onClick={() => setSelectedDict(null)}>Back</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Words;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\AuthButton\\AuthButton.js",["283","284"],"import React, { useState } from 'react';\r\nimport img from '../../../assets/img/auth-ico.svg';\r\nimport './AuthButton.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport isAuthState from '../../../recoilStates/isAuthState';\r\nimport { useRecoilState } from 'recoil';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\n\r\n\r\n\r\nexport default function AuthButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [isAuth, changeAuth] = useRecoilState(isAuthState);\r\n    const history = useHistory();\r\n\r\n    const handleClick = (event) => {\r\n        if (isAuth) setAnchorEl(event.currentTarget)\r\n        else history.push(\"/authentication\");\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n\r\n    const logOutHandler = () => {\r\n        localStorage.removeItem('TOKEN');\r\n        handleClose();\r\n        history.push(\"/authentication\");\r\n        changeAuth(false);\r\n    };\r\n    return (\r\n        <div>\r\n            <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n                <img src={img} alt=\"auth ico\" />\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <MenuItem onClick={()=> {\r\n                    history.push('/profile');\r\n                    handleClose();\r\n                }}>Profile</MenuItem>\r\n                <MenuItem onClick={logOutHandler}>Logout</MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\AuthForm\\AuthForm.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Layout\\Layout.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isAuthState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Sections.js",["285","286","287","288","289"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\nimport Section from './Section/Section';\r\nimport './Sections.css';\r\nimport subsectionState from '../../../recoilStates/subsectionState';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Words from '../Words/Words';\r\nimport ExerciseStepper from './Subsection/Exercises/ExerciseStepper';\r\nimport './style.css';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`wrapped-tabpanel-${index}`}\r\n      aria-labelledby={`wrapped-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `wrapped-tab-${index}`,\r\n    'aria-controls': `wrapped-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\n\r\nconst Sections = (props) => {\r\n\r\n  const [sections, changeSections] = useState([]);\r\n  const [subsections, changeSubsections] = useState([]);\r\n  const [selectedSectionId, changeSelectedSection] = useState(null);\r\n  const [selectedSubsection, setSelectedSubsection] = useRecoilState(subsectionState);\r\n  const [dictionaries, setDictionaries] = useState([]);\r\n  const [selectedDict, setSelectedDict] = useState();\r\n  const [exercises, setExercises] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState('one');\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedSubsection(null);\r\n    setSelectedDict(null);\r\n    setExercises([]);\r\n  }, [selectedSectionId])\r\n\r\n\r\n  useEffect(() => {\r\n    if(selectedSubsection) getExercises();\r\n  }, [selectedSubsection])\r\n  \r\n  useEffect(() => {\r\n    setSelectedSubsection({});\r\n    axios.get(\"/sections\")\r\n      .then(response => {\r\n        const sect = response.data;\r\n        changeSections(sect);\r\n      })\r\n      .catch(error => {\r\n        history.push('/authentication');\r\n      });\r\n  }, []);\r\n\r\n  const getDictionaries = (id) => {\r\n    axios.get(`sections/${id}/dictionaries`)\r\n      .then(response => {\r\n        const dict = response.data;\r\n        setDictionaries(dict);\r\n      })\r\n      .catch(error => {\r\n        history.push('/authentication');\r\n      });\r\n  };\r\n\r\n  const getExercises = () => {\r\n    axios.get(`/subsections/${selectedSubsection.id}/exercises`)\r\n      .then(response => {\r\n        const item = response.data;\r\n        setExercises(item);\r\n      })\r\n      .catch(error => {\r\n        history.push('/authentication');\r\n      })\r\n  }\r\n\r\n\r\n  const sectionToggleHandler = (id) => {\r\n    selectedSectionId === id ? changeSelectedSection(null) : changeSelectedSection(id);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (selectedSectionId && selectedSubsection !== {}) {\r\n      axios.get(`/sections/${selectedSectionId}/subsections`)\r\n        .then(response => {\r\n          const subsection = response.data;\r\n          changeSubsections(subsection);\r\n\r\n        })\r\n        .catch(error => {\r\n          history.push('/authentication');\r\n        });\r\n    }\r\n  }, [selectedSectionId]);\r\n\r\n  let sect = sections.map(sec => {\r\n    return (\r\n      <Section key={sec.id} id={sec.id} clicked={() => {\r\n        sectionToggleHandler(sec.id);\r\n        getDictionaries(sec.id);\r\n      }} showId={selectedSectionId} subsections={subsections} name={sec.name} />\r\n    )\r\n  });\r\n  if(sections.length === 0) return <div className=\"Sections\">Sorry, you do not have access to any sections right now. Please notify your teacher. </div>\r\n  return (\r\n    <div className=\"Sections\">\r\n      <div className=\"Tree\">\r\n        {sect}\r\n      </div>\r\n      <div className=\"Content\">\r\n        {selectedSectionId && selectedSubsection && (<div className={classes.root}>\r\n          <AppBar position=\"static\">\r\n            <Tabs value={value} onChange={handleChange}>\r\n              <Tab value=\"one\" label=\"Lecture\" wrapped {...a11yProps('one')} />\r\n              <Tab value=\"two\" label=\"Tasks\" {...a11yProps('two')} />\r\n              <Tab value=\"three\" label=\"Dictionaries\" {...a11yProps('three')} />\r\n\r\n            </Tabs>\r\n          </AppBar>\r\n          <TabPanel className=\"content-panel\" value={value} index=\"one\">\r\n            <h1>{selectedSubsection.name}</h1>\r\n            <div dangerouslySetInnerHTML={{ __html: selectedSubsection.lecture }} />\r\n          </TabPanel>\r\n          <TabPanel value={value} index=\"two\">\r\n            <ExerciseStepper exercises={exercises}/>\r\n            </TabPanel>\r\n          <TabPanel value={value} index=\"three\">\r\n            <div className=\"Dictionaries\">\r\n            {!selectedDict ? (dictionaries.map(d => (\r\n              <div className=\"dictionary-item\" key={d.id} onClick={() => setSelectedDict(d)}>\r\n                {d.name}\r\n              </div>))) : <Words dictionaryId={selectedDict.id} setSelectedDict={setSelectedDict} />\r\n            }\r\n            </div>\r\n           \r\n          </TabPanel>\r\n\r\n        </div>)}\r\n\r\n      </div>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n\r\n\r\n\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Section\\Section.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Authentication\\RegistrationForm\\RegForm.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Subsection.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\subsectionState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\recoilStates\\isTeacherState.js",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\AdminPanel.jsx",["290"],"import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Dictionaries from './Dictionaries/Dictionaries';\r\nimport Words from './Words/Words';\r\nimport Exercises from './Exercises/Exercises';\r\nimport Sections from './Sections/Sections';\r\nimport axios from '../../axios';\r\nimport Users from './Users/Users';\r\nimport './AdminPanel.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-force-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-force-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst AdminPanel = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n  const [isAdmin, setIsAdmin] = useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n      axios.get('authentication/checkadmin')\r\n        .then((response) => {\r\n          setIsAdmin(response.data.admin);\r\n        }).catch(error => {\r\n          alert(error)\r\n        })\r\n  }, [])\r\n  return (\r\n    <div className='admin-panel'>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          aria-label=\"scrollable force tabs example\"\r\n        >\r\n          <Tab label=\"Words\" {...a11yProps(0)} />\r\n          <Tab label=\"Dictionaries\"  {...a11yProps(1)} />\r\n          <Tab label=\"Exercises\" {...a11yProps(2)} />\r\n          <Tab label=\"Sections\"  {...a11yProps(3)} />\r\n          {(isAdmin && <Tab label=\"Users\"  {...a11yProps(4)} />)}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Words />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Dictionaries />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Exercises />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <Sections />\r\n      </TabPanel>\r\n      {(isAdmin) && <TabPanel value={value} index={4}>\r\n        <Users />\r\n      </TabPanel>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPanel;","D:\\Projects\\Diplom\\english-react\\src\\Components\\ErrorPages\\Access\\NoAccess.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\Words.jsx",["291","292"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\nimport { useHistory } from 'react-router';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AddCircleTwoTone, AlternateEmailTwoTone, DeleteTwoTone, EditTwoTone } from '@material-ui/icons';\r\nimport { red, yellow, blue } from '@material-ui/core/colors';\r\nimport DeleteWord from './DeleteWord';\r\nimport EditWord from './EditWord';\r\nimport AddWord from './AddWord';\r\nimport { Dialog, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchBar from '../SearchBar';\r\n\r\nconst Words = (props) => {\r\n  const [words, changeWords] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [modal, setModal] = useState({});\r\n  const handleClickOpen = (name, id) => {\r\n    switch (name) {\r\n      case 'add': setModal(<AddWord handleClose={handleClose} getItems={getItems} />)\r\n        break;\r\n      case 'edit': setModal(<EditWord handleClose={handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      case 'delete': setModal(<DeleteWord handleClose={handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const searchFilter = (words, text) => {\r\n    return words.filter(word => word.original.toLowerCase().includes(text.toLowerCase())\r\n      || word.translate.toLowerCase().includes(text.toLowerCase()));\r\n  }\r\n  const getItems = () => {\r\n    axios.get('/dictionaries/words')\r\n      .then(response => {\r\n        const words = response.data;\r\n        setSearch(words);\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div className='words'>\r\n        <>\r\n          <div className='panel-header'>\r\n            <IconButton aria-label=\"add\" onClick={() => handleClickOpen('add')} >\r\n              <AddCircleTwoTone fontSize=\"large\" style={{ color: blue[500] }} />\r\n            </IconButton>\r\n            <SearchBar\r\n              allItems={words}\r\n              setSearch={setSearch}\r\n              filter={searchFilter}\r\n            />\r\n          </div>\r\n          <TableContainer component={Paper} style={{ minHeight: '60vh' }} >\r\n            <Table stickyHeader>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell />\r\n                  <TableCell>Original</TableCell>\r\n                  <TableCell>Translate</TableCell>\r\n                  <TableCell />\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {search.map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell />\r\n                    <TableCell>{row.original}</TableCell>\r\n                    <TableCell>{row.translate}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      <IconButton aria-label=\"edit\" onClick={() => handleClickOpen('edit', row.id)}>\r\n                        <EditTwoTone fontSize=\"default\" style={{ color: yellow[500] }} />\r\n                      </IconButton>\r\n                      <IconButton aria-label=\"delete\" onClick={() => handleClickOpen('delete', row.id)}>\r\n                        <DeleteTwoTone fontSize=\"default\" style={{ color: red[500] }} />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </>\r\n      </div>\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n        {modal}\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport default Words;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\AddWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\DeleteWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Words\\EditWord.jsx",["293"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../axios';\r\n\r\nexport default function AddWord({ handleClose, getItems, wordId }) {\r\n  const [translate, setTranslate] = useState('');\r\n  const [original, setOriginal] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/words/${wordId}`)\r\n      .then(response => {\r\n        setTranslate(response.data.translate);\r\n        setOriginal(response.data.original);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveWord = () => {\r\n    const word = {\r\n      id: wordId,\r\n      translate: translate,\r\n      original: original,\r\n    }\r\n    axios.put('dictionaries/words', word)\r\n      .then((response) => {\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!original.length || !translate.length);\r\n  }, [original, translate])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Original\"\r\n          value={original}\r\n          onChange={(e) => setOriginal(e.target.value)}\r\n          type=\"text\"\r\n          autoComplete={false}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Translate\"\r\n          value={translate}\r\n          onChange={(e) => setTranslate(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveWord();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n          </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\Dictionaries.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\EditDictionary.jsx",["294"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../axios';\r\n\r\nexport default function AddWord({ handleClose, getItems, dictionaryId }) {\r\n  const [name, setName] = useState('');\r\n  const [secretName, setSecretName] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/${dictionaryId}`)\r\n      .then(response => {\r\n        setName(response.data.name);\r\n        setSecretName(response.data.secretName);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveDictionary = () => {\r\n    const dictionary = {\r\n      id: dictionaryId,\r\n      name: name,\r\n      secretName: secretName,\r\n    }\r\n    axios.put('dictionaries/', dictionary)\r\n      .then((response) => {\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!name.length || !secretName.length);\r\n  }, [name, secretName])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Name for teachers\"\r\n          value={secretName}\r\n          onChange={(e) => setSecretName(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveDictionary();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\DeleteDictionary.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\AddDictionary.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\EditWord.jsx",["295"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../../axios';\r\n\r\n\r\nexport default function AddWord({ handleClose, getItems, wordId }) {\r\n  const [translate, setTranslate] = useState('');\r\n  const [original, setOriginal] = useState('');\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const getWord = () => {\r\n    axios.get(`dictionaries/words/${wordId}`)\r\n      .then(response => {\r\n        setTranslate(response.data.translate);\r\n        setOriginal(response.data.original);\r\n      })\r\n      .catch(() => handleClose());\r\n  }\r\n  useEffect(() => {\r\n    getWord();\r\n  }, []);\r\n\r\n  const saveWord = () => {\r\n    const word = {\r\n      id: wordId,\r\n      translate: translate,\r\n      original: original,\r\n    }\r\n    axios.put('dictionaries/words', word)\r\n      .then((response) => {\r\n        getItems();\r\n        handleClose();\r\n      }).catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsDisabled(!original.length || !translate.length);\r\n  }, [original, translate])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Edit Word</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Original\"\r\n          value={original}\r\n          onChange={(e) => setOriginal(e.target.value)}\r\n          type=\"text\"\r\n          autoComplete={false}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogContent>\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Translate\"\r\n          value={translate}\r\n          onChange={(e) => setTranslate(e.target.value)}\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={() => {\r\n          saveWord();\r\n        }} disabled={isDisabled} color=\"primary\">\r\n          Edit\r\n          </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\AddWord.jsx",["296","297"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport axios from '../../../../axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AddCircleTwoTone } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport { TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport default function AddWord({ handleClose, getItems, dictionaryId }) {\r\n  const [words, setWords] = useState([]);\r\n  const [newWords, setNewWords] = useState([]);\r\n\r\n  const saveWord = (wordId) => {\r\n    axios.post(`dictionaries/${dictionaryId}/words/${wordId}`)\r\n      .then((response) => {\r\n        getItems();\r\n        alert('Word has been added')\r\n      }).catch(error => {\r\n        alert('Word already in dictionary');\r\n      })\r\n  }\r\n\r\n  const getDictionaryWords = () => {\r\n    axios.get(`dictionaries/${dictionaryId}/words`)\r\n      .then((response) => {\r\n        setNewWords(response.data);\r\n      }).catch(error => {\r\n      })\r\n  }\r\n  useEffect(() => {\r\n    getDictionaryWords();\r\n    getNewWords();\r\n  }, [words])\r\n\r\n  const getNewWords = () => {\r\n    axios.get(`dictionaries/words`)\r\n    .then((response) => {\r\n      const data = response.data;\r\n      const myArray = data.filter(el => !newWords.includes(el));\r\n      setWords(myArray);\r\n    }).catch(error => {\r\n    })\r\n  }\r\n  useEffect(() => {\r\n    getDictionaryWords();\r\n    getNewWords();\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"form-dialog-title\">Add Word</DialogTitle>\r\n      <TableContainer component={Paper}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Original</TableCell>\r\n              <TableCell>Translate</TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {words.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell>{row.original}</TableCell>\r\n                <TableCell>{row.translate}</TableCell>\r\n                <TableCell>\r\n                  <IconButton aria-label=\"edit\" onClick={() => saveWord(row.id)}>\r\n                    <AddCircleTwoTone fontSize=\"default\" style={{ color: blue[500] }} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\DeleteWord.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Dictionaries\\words\\Rows.jsx",["298","299"],"import React, { useEffect, useState } from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport axios from '../../../../axios';\r\nimport { AddCircleTwoTone, DeleteTwoTone, EditTwoTone } from '@material-ui/icons';\r\nimport { red, yellow, blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport DeleteWord from './DeleteWord';\r\nimport EditWord from './EditWord';\r\nimport AddWord from './AddWord';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst Rows = (props) => {\r\n  const { dictionary } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  const [words, changeWords] = useState([]);\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  const getItems = () => {\r\n    axios.get(`/dictionaries/${dictionary.id}/words`)\r\n      .then(response => {\r\n        const words = response.data;\r\n        changeWords(words);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n\r\n  const handleClickOpen = (name, id, dictionaryId) => {\r\n    switch (name) {\r\n      case 'add': props.setModal(<AddWord handleClose={props.handleClose} getItems={getItems} dictionaryId={dictionaryId} />)\r\n        break;\r\n      case 'edit': props.setModal(<EditWord handleClose={props.handleClose} getItems={getItems} wordId={id} />)\r\n        break;\r\n      case 'delete': props.setModal(<DeleteWord handleClose={props.handleClose} getItems={getItems} wordId={id}  dictionaryId={dictionaryId} />)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    props.setOpen(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>{dictionary.name}</TableCell>\r\n        <TableCell>{dictionary.secretName}</TableCell>\r\n        <TableCell align=\"right\">\r\n          <IconButton aria-label=\"edit\" onClick={() => props.actions('edit', dictionary.id)}>\r\n            <EditTwoTone fontSize=\"large\" style={{ color: yellow[500] }} />\r\n          </IconButton>\r\n          <IconButton aria-label=\"delete\" onClick={() => props.actions('delete', dictionary.id)}>\r\n            <DeleteTwoTone fontSize=\"large\" style={{ color: red[500] }} />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Words\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell></TableCell>\r\n                    <TableCell>Original</TableCell>\r\n                    <TableCell>Translate</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <IconButton aria-label=\"add\" onClick={() => handleClickOpen('add', null, dictionary.id)} >\r\n                    <AddCircleTwoTone fontSize=\"small\" style={{ color: blue[500] }} />\r\n                  </IconButton>\r\n                  {words.map((word) => (\r\n                    <TableRow key={word.id}>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>{word.original}</TableCell>\r\n                      <TableCell>{word.translate}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <IconButton aria-label=\"edit\" onClick={() => handleClickOpen('edit', word.id) }>\r\n                          <EditTwoTone fontSize=\"small\" style={{ color: yellow[500] }} />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"delete\" onClick={() => handleClickOpen('delete', word.id, dictionary.id)}>\r\n                          <DeleteTwoTone fontSize=\"small\" style={{ color: red[500] }} />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Rows;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\Exercises.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\AddExercise.jsx",["300"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\DeleteExercise.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\ExerciseDetails.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\ExercisesList.jsx",["301"],"import React, { useState, useEffect } from 'react';\r\nimport axios from '../../../axios';\r\nimport { useHistory } from 'react-router';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AddCircleTwoTone, DeleteTwoTone, MoreTwoTone } from '@material-ui/icons';\r\nimport { red, blue } from '@material-ui/core/colors';\r\nimport { TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SearchBar from '../SearchBar';\r\n\r\nconst ExercisesList = ({ handleClickOpen, pageHandler }) => {\r\n  const [exercises, changeExercises] = useState([]);\r\n  const [search, setSearch] = useState([]);\r\n  const history = useHistory();\r\n  const getItems = () => {\r\n    axios.get('/exercises')\r\n      .then(response => {\r\n        const items = response.data;\r\n        setSearch(items);\r\n        changeExercises(items);\r\n      })\r\n      .catch(error => {\r\n        history.push(\"/authentication\");\r\n      })\r\n  }\r\n  const searchFilter = (items, text) => {\r\n    return items.filter(ex => ex.title.toLowerCase().includes(text.toLowerCase()));\r\n  }\r\n  useEffect(() => {\r\n    getItems();\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className='panel-header'>\r\n        <IconButton aria-label=\"add\" onClick={() => pageHandler({\r\n          name: 'add',\r\n          exercise: null,\r\n        })} >\r\n          <AddCircleTwoTone fontSize=\"large\" style={{ color: blue[500] }} />\r\n        </IconButton>\r\n        <SearchBar\r\n          allItems={exercises}\r\n          setSearch={setSearch}\r\n          filter={searchFilter}\r\n        />\r\n      </div>\r\n      <TableContainer component={Paper}>\r\n        <Table stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell />\r\n              <TableCell>Title</TableCell>\r\n              <TableCell />\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {search.map((row) => (\r\n              <TableRow key={row.id}>\r\n                <TableCell />\r\n                <TableCell>{row.title}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <IconButton aria-label=\"details\" onClick={() => pageHandler({\r\n                    name: 'details',\r\n                    exercise: row,\r\n                  })}>\r\n                    <MoreTwoTone fontSize=\"default\" style={{ color: blue[500] }} />\r\n                  </IconButton>\r\n                  <IconButton aria-label=\"delete\" onClick={() => handleClickOpen('delete', row.id, getItems)}>\r\n                    <DeleteTwoTone fontSize=\"default\" style={{ color: red[500] }} />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExercisesList;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Exercises\\Answer.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Sections.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\SectionsList.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\DeleteSection.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\SectionDetails.jsx",["302"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteUser.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\UserDetails.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddUser.jsx",["303"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { IconButton, Paper } from '@material-ui/core';\r\nimport axios from '../../../../axios';\r\nimport { AddCircleTwoTone } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst AddUsers = ({ handleClose, sectionId }) => {\r\n  const [users, changeUsers] = useState([]);\r\n\r\n  const getUsers = () => {\r\n    axios.get(`sections/${sectionId}/notusers`)\r\n      .then((response) => {\r\n        changeUsers(response.data)\r\n      }).catch(error => {\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  const addUser = (id) =>{\r\n    axios.post(`sections/${sectionId}/users/${id}`)\r\n      .then(() => {\r\n        getUsers();;\r\n      }).catch(error => {\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        Add users\r\n        </DialogTitle>\r\n      <DialogContent>\r\n        {users.map((user) => {\r\n          return (\r\n            <Paper key={user.id}>\r\n              {user.userName}\r\n              <IconButton aria-label=\"add\" onClick={() => addUser(user.id)} >\r\n                <AddCircleTwoTone fontSize=\"default\" style={{ color: blue[500] }} />\r\n              </IconButton>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Back\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddUsers;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\UsersPanel.jsx",["304"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\SubsectionDetails.jsx",["305","306","307"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\DictionariesPanel.jsx",["308"],"import React, { useEffect, useState } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport axios from '../../../../axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { AddCircleTwoTone, DeleteTwoTone, MoreTwoTone } from '@material-ui/icons';\r\nimport { red, blue } from '@material-ui/core/colors';\r\n\r\n\r\nexport const DictionariesPanel = ({ editMode, sectionId, handleClickOpen, isOpen }) => {\r\n  const [dictionaries, changeDictionaries] = useState([]);\r\n\r\n  const getUsers = () => {\r\n    axios.get(`/sections/${sectionId}/dictionaries`)\r\n      .then(response => {\r\n        const item = response.data;\r\n        changeDictionaries(item);\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getUsers();\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <Grid item xs={6}>\r\n      <h2>Dictionaries</h2>\r\n      <Paper>\r\n        {dictionaries.map((dict) => {\r\n          return (\r\n            <Paper key={dict.id}>\r\n              Name: {dict.name}\r\n              SecretName: {dict.secretName}\r\n              <IconButton aria-label=\"details\" >\r\n                <MoreTwoTone fontSize=\"default\" style={{ color: blue[500] }} onClick={() => handleClickOpen('dictionaryDetails', dict)} />\r\n              </IconButton>\r\n              {editMode && (\r\n              <IconButton aria-label=\"delete\" >\r\n                <DeleteTwoTone fontSize=\"default\" style={{ color: red[500] }} onClick={() => handleClickOpen('deleteDictionary', dict.id)} />\r\n              </IconButton>)}\r\n            </Paper>\r\n          )\r\n        })}\r\n\r\n      </Paper>\r\n      {editMode && (<IconButton aria-label=\"delete\"  onClick={() => handleClickOpen('addDictionary', sectionId)} >\r\n        <AddCircleTwoTone fontSize=\"default\" style={{ color: blue[500] }} />\r\n      </IconButton>)}\r\n    </Grid>\r\n  );\r\n}","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DictionaryDetails.jsx",["309"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Paper } from '@material-ui/core';\r\nimport axios from '../../../../axios';\r\n\r\nconst DictionaryDetails = ({ handleClose, dictionary }) => {\r\n  const [words, setWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`dictionaries/${dictionary.id}/words`)\r\n      .then((response) => {\r\n        setWords(response.data);\r\n      }).catch(error => {\r\n        alert(error)\r\n      })\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        {dictionary.name}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n      {words.map((word) => {\r\n        return (\r\n          <Paper key={word.id}>\r\n            {word.original}___{word.translate}\r\n          </Paper>\r\n        )\r\n      })}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Back\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DictionaryDetails;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddDictionary.jsx",["310"],"import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { IconButton, Paper } from '@material-ui/core';\r\nimport axios from '../../../../axios';\r\nimport { AddCircleTwoTone } from '@material-ui/icons';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst AddDictionary = ({ handleClose, sectionId }) => {\r\n  const [dictionaries, changeDictionaries] = useState([]);\r\n\r\n  const getDictionaries = () => {\r\n    axios.get(`sections/${sectionId}/notdictionaries`)\r\n      .then((response) => {\r\n        changeDictionaries(response.data)\r\n      }).catch(error => {\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  const addDictionary = (id) =>{\r\n    axios.post(`sections/${sectionId}/dictionaries/${id}`)\r\n      .then(() => {\r\n        getDictionaries();\r\n      }).catch(error => {\r\n        alert(error)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDictionaries();\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <DialogTitle id=\"alert-dialog-title\">\r\n        Add dictionaries\r\n        </DialogTitle>\r\n      <DialogContent>\r\n        {dictionaries.map((dict) => {\r\n          return (\r\n            <Paper key={dict.id}>\r\n              {dict.name}___{dict.secretName}\r\n              <IconButton aria-label=\"add\" onClick={() => addDictionary(dict.id)} >\r\n                <AddCircleTwoTone fontSize=\"default\" style={{ color: blue[500] }} />\r\n              </IconButton>\r\n            </Paper>\r\n          );\r\n        })}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n          Back\r\n        </Button>\r\n      </DialogActions>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddDictionary;","D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteDictionary.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Users\\Users.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\AddExercises.jsx",["311"],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteExercise.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\ExerciseDetails.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\AddSubsections.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\Modals\\DeleteSubsection.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\Sections\\partial-components\\AddSection.jsx",["312","313","314","315","316","317","318","319"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Accordion, AccordionActions, AccordionSummary, Button, Container, TextField, Typography } from '@material-ui/core';\r\nimport axios from '../../../../axios';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n    margin: 3,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: 'bottom',\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: 'center',\r\n  },\r\n  column: {\r\n    flexBasis: '33.33%',\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: 'none',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n}));\r\n\r\nconst AddSection = ({ pageHandler, handleClickOpen }) => {\r\n  const [section, setSection] = useState({\r\n    name: '',\r\n    order: 1,\r\n  });\r\n\r\n  const addSection = () => {\r\n    axios.post('/sections', section)\r\n      .then(response => {\r\n        pageHandler({\r\n          name: 'list',\r\n          section: null,\r\n        })\r\n      })\r\n      .catch(error => {\r\n        alert(error);\r\n      })\r\n  }\r\n  return (\r\n    <Grid container xs={12} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          value={section.name}\r\n          onChange={(e) => setSection({\r\n            ...section,\r\n            name: e.target.value,\r\n          })}\r\n          required\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Title\"\r\n          variant=\"outlined\"\r\n        />\r\n        \r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          value={section.order}\r\n          onChange={(e) => setSection({\r\n            ...section,\r\n            order: +e.target.value < 1 ? 1 : +e.target.value ,\r\n          })}\r\n          type=\"number\"\r\n          required\r\n          id=\"outlined-multiline-static\"\r\n          label=\"Order\"\r\n          variant=\"outlined\"\r\n        />\r\n        \r\n      </Grid>\r\n      <Button\r\n        onClick={() => pageHandler({\r\n          name: 'list',\r\n          section: null,\r\n        })} color=\"primary\">\r\n        Back to sections\r\n      </Button>\r\n      <Button\r\n        onClick={() => addSection()} color=\"primary\" autoFocus>\r\n        Save\r\n      </Button>\r\n    </Grid>\r\n  )\r\n}\r\n\r\n\r\nexport default AddSection;\r\n","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Exercises\\ExerciseStepper.jsx",["320"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepButton from '@material-ui/core/StepButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Answer from './Answer';\r\n\r\n\r\nconst regexp = new RegExp('%%{[0-9]+}%%', 'g');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  completed: {\r\n    display: 'inline-block',\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\nconst ExerciseStepper = ({ exercises }) => {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [completed, setCompleted] = React.useState({});\r\n  const steps = exercises.map(e => e.title);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [result, setResult] = useState(0);\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const getStepContent = (step) => (\r\n    <>\r\n      <div>{exercises[step]?.text.replaceAll(regexp, '______')}</div>\r\n      <hr />\r\n      {exercises.length ? exercises[step].answers.map(answ => {\r\n        return (\r\n          <>\r\n            <Answer item={answ} exerciseId={exercises[step].id} answers={answers} setAnswers={setAnswers} />\r\n            <br />\r\n          </>);\r\n      }) : \"there are no exercises\" }\r\n    </>);\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newActiveStep =\r\n      isLastStep() && !allStepsCompleted()\r\n        ?\r\n        steps.findIndex((step, i) => !(i in completed))\r\n        : activeStep + 1;\r\n    setActiveStep(newActiveStep);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    let count  = 0;\r\n    exercises[activeStep].answers.forEach((a) => {\r\n      answers.forEach(a2 => {\r\n        if(a.order === a2.order && a.text.toLowerCase() === a2.text.toLowerCase())\r\n        {\r\n          count +=1;\r\n        }\r\n      })\r\n      \r\n    })\r\n    setResult( result + (count / exercises[activeStep].answers.length) );\r\n    setCompleted(newCompleted);\r\n    handleNext();\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label}>\r\n            <StepButton onClick={handleStep(index)} completed={completed[index]}>\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      {exercises.length ? <div>\r\n        {allStepsCompleted()  ? (\r\n          <div>\r\n            <Typography className={classes.instructions}>\r\n              All steps completed - you&apos;re finished\r\n              Your result is {Math.round((result / exercises.length) * 10)}\r\n            </Typography>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <Typography className={classes.instructions}>{getStepContent(activeStep)}</Typography>\r\n            <div>\r\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                Back\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                \r\n                  handleNext();\r\n                  }}\r\n                className={classes.button}\r\n              >\r\n                Next\r\n              </Button>\r\n              {activeStep !== steps.length &&\r\n                (completed[activeStep] ? (\r\n                  <Typography variant=\"caption\" className={classes.completed}>\r\n                    Step {activeStep + 1} already completed\r\n                  </Typography>\r\n                ) : (\r\n                  <Button variant=\"contained\" color=\"primary\" onClick={handleComplete}>\r\n                    {completedSteps() === totalSteps() - 1 ? 'Finish' : 'Complete Step'}\r\n                  </Button>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div> : <div> There are no exercises </div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExerciseStepper;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Content\\Sections\\Subsection\\Exercises\\Answer.jsx",["321"],"import React, { useState } from 'react';\r\nimport { ButtonGroup, InputAdornment, TextField } from '@material-ui/core';\r\n\r\nconst Answer = ({ setAnswers, answers, item, exerciseId }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const onBlurHandler = () => {\r\n\r\n    const index = answers.findIndex((obj => obj.order === item.order));\r\n    const buff = [...answers];\r\n  \r\n    if(index !== -1) buff.splice(index, 1);\r\n    buff.push({ order: item.order, text: text });\r\n \r\n    setAnswers(buff.sort((a, b) => a.order - b.order));\r\n   \r\n\r\n  }\r\n  return (\r\n    <TextField\r\n      key={item.order}\r\n      InputProps={{\r\n        startAdornment: <InputAdornment position=\"start\">{item.order}</InputAdornment>,\r\n      }}\r\n      className=\"title-input\"\r\n      value={text}\r\n      onChange={(e) => setText(e.target.value)}\r\n      onBlur={() => onBlurHandler()}\r\n      variant=\"outlined\"\r\n    />);\r\n}\r\n\r\nexport default Answer;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Footer\\Footer.jsx",[],"D:\\Projects\\Diplom\\english-react\\src\\Components\\AdminPanel\\SearchBar\\index.jsx",["322"],"import { TextField } from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport './style.css';\r\n\r\nconst SearchBar = ({ allItems, setSearch, filter }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (text.length === 0) setSearch(allItems)\r\n    else {\r\n      const items = filter(allItems, text);\r\n      setSearch(items);\r\n    }\r\n  }, [text, allItems])\r\n  return (\r\n    <div className='search-bar-wrapper'>\r\n      <TextField\r\n        variant='outlined'\r\n        placeholder='Search'\r\n        value={text}\r\n        onChange={(event) => setText(event.target.value)}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar;","D:\\Projects\\Diplom\\english-react\\src\\Components\\Navigation\\Profile\\Profile.jsx",["323","324"],"import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useRecoilState } from 'recoil';\r\nimport isAuthState from '../../../recoilStates/isAuthState';\r\nimport axios from '../../../axios';\r\nimport { useHistory } from 'react-router';\r\nimport './style.css';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport default function Profile() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({});\r\n  const [roles, setRoles] = useState([]);\r\n  const [isAuth, changeAuth] = useRecoilState(isAuthState);\r\n\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      axios.get('authentication/getCurrentUser')\r\n        .then(({ data }) => {\r\n          setUser(data.user);\r\n          setRoles(data.role);\r\n        })\r\n        .catch(error => {\r\n          alert(error)\r\n        })\r\n    } else history.push('/authentication');\r\n  }, [])\r\n\r\n  const logOutHandler = () => {\r\n    localStorage.removeItem('TOKEN');\r\n    changeAuth(false);\r\n    history.push(\"/authentication\");\r\n    \r\n};\r\n  return (\r\n    <div style={{ height: '75vh' }}>\r\n      <Card className={classes.root} variant=\"outlined\">\r\n        <div className='profile-content'>\r\n          <div className='profile-left'>\r\n            <Typography>\r\n              Login:\r\n            </Typography>\r\n            <Typography>\r\n              Email: \r\n            </Typography>\r\n            <Typography>\r\n              Name: \r\n            </Typography>\r\n            <Typography>\r\n              Last name: \r\n            </Typography>\r\n            <Typography>\r\n              Patronymic: \r\n            </Typography>\r\n            <Typography>\r\n              Phone:\r\n            </Typography>\r\n            <Typography>\r\n              Role:\r\n            </Typography>\r\n          </div>\r\n          <div className='profile-right'>\r\n            <Typography>\r\n              {user.userName}\r\n            </Typography>\r\n            <Typography>\r\n               {user.email}\r\n            </Typography>\r\n            <Typography>\r\n               {user.firstName}\r\n            </Typography>\r\n            <Typography>\r\n               {user.lastName}\r\n            </Typography>\r\n            <Typography>\r\n             {user.patronymic}\r\n            </Typography>\r\n            <Typography>\r\n          {user.phoneNumber}\r\n            </Typography>\r\n            <Typography>\r\n          {roles.join(', ')}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n\r\n        <CardActions>\r\n          <Button size=\"small\" onClick={() => logOutHandler()}>Logout</Button>\r\n        </CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","replacedBy":"328"},{"ruleId":"329","severity":1,"message":"330","line":28,"column":8,"nodeType":"331","endLine":28,"endColumn":16,"suggestions":"332"},{"ruleId":"329","severity":1,"message":"333","line":24,"column":6,"nodeType":"331","endLine":24,"endColumn":8,"suggestions":"334"},{"ruleId":"335","severity":1,"message":"336","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":25},{"ruleId":"335","severity":1,"message":"339","line":4,"column":10,"nodeType":"337","messageId":"338","endLine":4,"endColumn":14},{"ruleId":"335","severity":1,"message":"340","line":6,"column":26,"nodeType":"337","messageId":"338","endLine":6,"endColumn":40},{"ruleId":"329","severity":1,"message":"341","line":76,"column":6,"nodeType":"331","endLine":76,"endColumn":25,"suggestions":"342"},{"ruleId":"329","severity":1,"message":"343","line":81,"column":6,"nodeType":"331","endLine":81,"endColumn":26,"suggestions":"344"},{"ruleId":"329","severity":1,"message":"345","line":93,"column":6,"nodeType":"331","endLine":93,"endColumn":8,"suggestions":"346"},{"ruleId":"329","severity":1,"message":"347","line":134,"column":6,"nodeType":"331","endLine":134,"endColumn":25,"suggestions":"348"},{"ruleId":"335","severity":1,"message":"349","line":59,"column":9,"nodeType":"337","messageId":"338","endLine":59,"endColumn":16},{"ruleId":"335","severity":1,"message":"350","line":3,"column":10,"nodeType":"337","messageId":"338","endLine":3,"endColumn":20},{"ruleId":"335","severity":1,"message":"351","line":5,"column":28,"nodeType":"337","messageId":"338","endLine":5,"endColumn":49},{"ruleId":"329","severity":1,"message":"352","line":23,"column":6,"nodeType":"331","endLine":23,"endColumn":8,"suggestions":"353"},{"ruleId":"329","severity":1,"message":"352","line":23,"column":6,"nodeType":"331","endLine":23,"endColumn":8,"suggestions":"354"},{"ruleId":"329","severity":1,"message":"352","line":24,"column":6,"nodeType":"331","endLine":24,"endColumn":8,"suggestions":"355"},{"ruleId":"329","severity":1,"message":"356","line":40,"column":6,"nodeType":"331","endLine":40,"endColumn":13,"suggestions":"357"},{"ruleId":"329","severity":1,"message":"356","line":54,"column":6,"nodeType":"331","endLine":54,"endColumn":8,"suggestions":"358"},{"ruleId":"329","severity":1,"message":"359","line":37,"column":6,"nodeType":"331","endLine":37,"endColumn":8,"suggestions":"360"},{"ruleId":"329","severity":1,"message":"359","line":66,"column":6,"nodeType":"331","endLine":66,"endColumn":8,"suggestions":"361"},{"ruleId":"329","severity":1,"message":"362","line":21,"column":6,"nodeType":"331","endLine":21,"endColumn":8,"suggestions":"363"},{"ruleId":"329","severity":1,"message":"359","line":34,"column":6,"nodeType":"331","endLine":34,"endColumn":8,"suggestions":"364"},{"ruleId":"329","severity":1,"message":"365","line":168,"column":6,"nodeType":"331","endLine":168,"endColumn":24,"suggestions":"366"},{"ruleId":"329","severity":1,"message":"367","line":34,"column":6,"nodeType":"331","endLine":34,"endColumn":8,"suggestions":"368"},{"ruleId":"329","severity":1,"message":"367","line":26,"column":6,"nodeType":"331","endLine":26,"endColumn":14,"suggestions":"369"},{"ruleId":"329","severity":1,"message":"370","line":111,"column":6,"nodeType":"331","endLine":111,"endColumn":14,"suggestions":"371"},{"ruleId":"372","severity":1,"message":"373","line":201,"column":20,"nodeType":"374","messageId":"375","endLine":201,"endColumn":22},{"ruleId":"372","severity":1,"message":"373","line":204,"column":20,"nodeType":"374","messageId":"375","endLine":204,"endColumn":22},{"ruleId":"329","severity":1,"message":"367","line":26,"column":6,"nodeType":"331","endLine":26,"endColumn":14,"suggestions":"376"},{"ruleId":"329","severity":1,"message":"377","line":19,"column":6,"nodeType":"331","endLine":19,"endColumn":8,"suggestions":"378"},{"ruleId":"329","severity":1,"message":"379","line":34,"column":6,"nodeType":"331","endLine":34,"endColumn":8,"suggestions":"380"},{"ruleId":"329","severity":1,"message":"381","line":34,"column":6,"nodeType":"331","endLine":34,"endColumn":8,"suggestions":"382"},{"ruleId":"335","severity":1,"message":"383","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":26},{"ruleId":"335","severity":1,"message":"384","line":3,"column":8,"nodeType":"337","messageId":"338","endLine":3,"endColumn":13},{"ruleId":"335","severity":1,"message":"385","line":5,"column":10,"nodeType":"337","messageId":"338","endLine":5,"endColumn":19},{"ruleId":"335","severity":1,"message":"386","line":5,"column":21,"nodeType":"337","messageId":"338","endLine":5,"endColumn":37},{"ruleId":"335","severity":1,"message":"387","line":5,"column":39,"nodeType":"337","messageId":"338","endLine":5,"endColumn":55},{"ruleId":"335","severity":1,"message":"388","line":5,"column":65,"nodeType":"337","messageId":"338","endLine":5,"endColumn":74},{"ruleId":"335","severity":1,"message":"389","line":5,"column":87,"nodeType":"337","messageId":"338","endLine":5,"endColumn":97},{"ruleId":"335","severity":1,"message":"390","line":10,"column":7,"nodeType":"337","messageId":"338","endLine":10,"endColumn":16},{"ruleId":"335","severity":1,"message":"383","line":1,"column":17,"nodeType":"337","messageId":"338","endLine":1,"endColumn":26},{"ruleId":"335","severity":1,"message":"391","line":2,"column":10,"nodeType":"337","messageId":"338","endLine":2,"endColumn":21},{"ruleId":"329","severity":1,"message":"392","line":14,"column":6,"nodeType":"331","endLine":14,"endColumn":22,"suggestions":"393"},{"ruleId":"335","severity":1,"message":"394","line":5,"column":8,"nodeType":"337","messageId":"338","endLine":5,"endColumn":19},{"ruleId":"329","severity":1,"message":"395","line":49,"column":6,"nodeType":"331","endLine":49,"endColumn":8,"suggestions":"396"},"no-native-reassign",["397"],"no-negated-in-lhs",["398"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'changeAuth' and 'changeTeacher'. Either include them or remove the dependency array.","ArrayExpression",["399"],"React Hook useEffect has a missing dependency: 'dictionaryId'. Either include it or remove the dependency array.",["400"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useRecoilValue' is defined but never used.","React Hook useEffect has a missing dependency: 'setSelectedSubsection'. Either include it or remove the dependency array.",["401"],"React Hook useEffect has a missing dependency: 'getExercises'. Either include it or remove the dependency array.",["402"],"React Hook useEffect has missing dependencies: 'history' and 'setSelectedSubsection'. Either include them or remove the dependency array.",["403"],"React Hook useEffect has missing dependencies: 'history' and 'selectedSubsection'. Either include them or remove the dependency array.",["404"],"'classes' is assigned a value but never used.","'useHistory' is defined but never used.","'AlternateEmailTwoTone' is defined but never used.","React Hook useEffect has a missing dependency: 'getWord'. Either include it or remove the dependency array.",["405"],["406"],["407"],"React Hook useEffect has missing dependencies: 'getDictionaryWords' and 'getNewWords'. Either include them or remove the dependency array.",["408"],["409"],"React Hook useEffect has a missing dependency: 'getItems'. Either include it or remove the dependency array.",["410"],["411"],"React Hook useEffect has a missing dependency: 'exercise'. Either include it or remove the dependency array.",["412"],["413"],"React Hook useEffect has missing dependencies: 'getSections' and 'getSubsections'. Either include them or remove the dependency array.",["414"],"React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["415"],["416"],"React Hook useEffect has missing dependencies: 'getExercises' and 'getSubsection'. Either include them or remove the dependency array.",["417"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["418"],"React Hook useEffect has a missing dependency: 'dictionary.id'. Either include it or remove the dependency array.",["419"],"React Hook useEffect has a missing dependency: 'getDictionaries'. Either include it or remove the dependency array.",["420"],"React Hook useEffect has a missing dependency: 'getExersises'. Either include it or remove the dependency array.",["421"],"'useEffect' is defined but never used.","'Paper' is defined but never used.","'Accordion' is defined but never used.","'AccordionActions' is defined but never used.","'AccordionSummary' is defined but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'useStyles' is assigned a value but never used.","'ButtonGroup' is defined but never used.","React Hook useEffect has missing dependencies: 'filter' and 'setSearch'. Either include them or remove the dependency array. If 'setSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["422"],"'CardContent' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'isAuth'. Either include them or remove the dependency array.",["423"],"no-global-assign","no-unsafe-negation",{"desc":"424","fix":"425"},{"desc":"426","fix":"427"},{"desc":"428","fix":"429"},{"desc":"430","fix":"431"},{"desc":"432","fix":"433"},{"desc":"434","fix":"435"},{"desc":"436","fix":"437"},{"desc":"436","fix":"438"},{"desc":"436","fix":"439"},{"desc":"440","fix":"441"},{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},{"desc":"444","fix":"446"},{"desc":"447","fix":"448"},{"desc":"444","fix":"449"},{"desc":"450","fix":"451"},{"desc":"452","fix":"453"},{"desc":"454","fix":"455"},{"desc":"456","fix":"457"},{"desc":"454","fix":"458"},{"desc":"459","fix":"460"},{"desc":"461","fix":"462"},{"desc":"463","fix":"464"},{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},"Update the dependencies array to be: [changeAuth, changeTeacher, isAuth]",{"range":"469","text":"470"},"Update the dependencies array to be: [dictionaryId]",{"range":"471","text":"472"},"Update the dependencies array to be: [selectedSectionId, setSelectedSubsection]",{"range":"473","text":"474"},"Update the dependencies array to be: [getExercises, selectedSubsection]",{"range":"475","text":"476"},"Update the dependencies array to be: [history, setSelectedSubsection]",{"range":"477","text":"478"},"Update the dependencies array to be: [history, selectedSectionId, selectedSubsection]",{"range":"479","text":"480"},"Update the dependencies array to be: [getWord]",{"range":"481","text":"482"},{"range":"483","text":"482"},{"range":"484","text":"482"},"Update the dependencies array to be: [getDictionaryWords, getNewWords, words]",{"range":"485","text":"486"},"Update the dependencies array to be: [getDictionaryWords, getNewWords]",{"range":"487","text":"488"},"Update the dependencies array to be: [getItems]",{"range":"489","text":"490"},{"range":"491","text":"490"},"Update the dependencies array to be: [exercise]",{"range":"492","text":"493"},{"range":"494","text":"490"},"Update the dependencies array to be: [editMode, getSections, getSubsections, isOpen]",{"range":"495","text":"496"},"Update the dependencies array to be: [getUsers]",{"range":"497","text":"498"},"Update the dependencies array to be: [getUsers, isOpen]",{"range":"499","text":"500"},"Update the dependencies array to be: [getExercises, getSubsection, isOpen]",{"range":"501","text":"502"},{"range":"503","text":"500"},"Update the dependencies array to be: [dictionary.id]",{"range":"504","text":"505"},"Update the dependencies array to be: [getDictionaries]",{"range":"506","text":"507"},"Update the dependencies array to be: [getExersises]",{"range":"508","text":"509"},"Update the dependencies array to be: [text, allItems, setSearch, filter]",{"range":"510","text":"511"},"Update the dependencies array to be: [history, isAuth]",{"range":"512","text":"513"},[924,932],"[changeAuth, changeTeacher, isAuth]",[753,755],"[dictionaryId]",[2223,2242],"[selectedSectionId, setSelectedSubsection]",[2319,2339],"[getExercises, selectedSubsection]",[2615,2617],"[history, setSelectedSubsection]",[3692,3711],"[history, selectedSectionId, selectedSubsection]",[889,891],"[getWord]",[883,885],[894,896],[1424,1431],"[getDictionaryWords, getNewWords, words]",[1769,1771],"[getDictionaryWords, getNewWords]",[1356,1358],"[getItems]",[2243,2245],[653,655],"[exercise]",[1294,1296],[5773,5791],"[editMode, getSections, getSubsections, isOpen]",[1028,1030],"[getUsers]",[798,806],"[getUsers, isOpen]",[3035,3043],"[getExercises, getSubsection, isOpen]",[833,841],[678,680],"[dictionary.id]",[1094,1096],"[getDictionaries]",[1075,1077],"[getExersises]",[388,404],"[text, allItems, setSearch, filter]",[1394,1396],"[history, isAuth]"]